[build-system]
requires = ["hatchling", "hatch-vcs"]
build-backend = "hatchling.build"


# [tool.hatch.version]
# source = "vcs"


# [tool.hatch.build]
# hooks.vcs.version-file = "src/hwid/_version.py"


[project]
name = "hwid"
version = "0.1.0"
description = "Extract the `hwid` on Windows, Linux, Mac. Cross-platform using Python, native OS detection."
readme = "README.md"
license = { text = "MIT" }
authors = [{ name = "Hasan Sezer Taşan", email = "hasansezertasan@gmail.com" }]
maintainers = [
  { name = "Hasan Sezer Taşan", email = "hasansezertasan@gmail.com" },
]
keywords = [
  "hwid",
  "hardware",
  "id",
  "unique",
  "identifier",
  "machine",
  "fingerprint",
  "fingerprinting",
  "licensing",
  "license",
  "licensing",
  "identification",
  "machine",
]
classifiers = [
  "Development Status :: 5 - Production/Stable",
  "License :: OSI Approved :: MIT License",
  "Environment :: Console",
  "Topic :: Software Development :: Libraries :: Python Modules",
  "Intended Audience :: Developers",
  "Operating System :: OS Independent",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3 :: Only",
  "Programming Language :: Python :: 3.6",
  "Programming Language :: Python :: 3.7",
  "Programming Language :: Python :: 3.8",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
]
requires-python = "<4.0,>=3.0"
dependencies = []


[project.urls]
documentation = "https://hasansezertasan.github.io/hwid"
repository = "https://github.com/hasansezertasan/hwid"
homepage = "https://github.com/hasansezertasan/hwid"


[project.scripts]
hwid = "hwid.__main__:app"


[tool.ruff]
fix = true
line-length = 88
output-format = "full"
preview = true
show-fixes = true
src = ["src", "tests"]
target-version = "py38"
unsafe-fixes = true


[tool.ruff.analyze]
detect-string-imports = true
preview = true


[tool.ruff.format]
docstring-code-format = true
line-ending = "lf"
preview = true


[tool.ruff.lint]
fixable = ["ALL"]
ignore = ["S404", "S602", "COM812"]
logger-objects = ["logging_setup.logger"]
preview = true
select = ["ALL"]


[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["PLC0414", "TID252"]
"main.py" = ["T201"]


[tool.ruff.lint.pyupgrade]
keep-runtime-typing = true


[tool.ruff.lint.pycodestyle]
ignore-overlong-task-comments = true


[tool.ruff.lint.flake8-tidy-imports]
ban-relative-imports = "all"


[tool.ruff.lint.pydocstyle]
convention = "google"


[tool.ruff.lint.ruff]
parenthesize-tuple-in-subscript = true


[tool.ruff.lint.mccabe]
max-complexity = 5


[tool.vulture]
exclude = ["*/.venv/*.py"]
min_confidence = 80
paths = ["hwid"]
sort_by_size = true


[tool.hatch.build.targets.sdist]
[tool.hatch.build.targets.wheel]
packages = ["hwid"]
